def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

allprojects {
    ext.versioning = {
        def finder = (version =~ /(\d+)(?:\.(\d+))?(?:\.(\d+))?(?:\.(\d+))?/)
        def versionMajor = finder[0][1] as Integer
        def versionMinor = finder[0][2] as Integer
        def versionBuild = finder[0][3] as Integer
        def versionCommit = finder[0][4] != null ? (finder[0][4] as Integer) : 0
        //"git rev-list --count HEAD".execute().text.replace("\n", "").replace("\r", "") as Integer
        def version4 = "$versionMajor.$versionMinor.$versionBuild.$versionCommit"
        def versionSha = getGitHash()

        def versionSuffix = version.replace(".", "x").replace("-", "x")
//def versionSuffixFile = new File("$rootDir/versionSuffix.txt")
//if (versionSuffixFile.exists())
//    versionSuffix = versionSuffixFile.text.trim()
//else
//    versionSuffixFile.write versionSuffix

        return ["major": versionMajor, "minor": versionMinor, "build": versionBuild, "commit": versionCommit,
                "three": version, "four": version4, "suffix": versionSuffix, "sha": versionSha]
    }

    project.ext.set("javaPrefix", "com_epam_deltix_dfp_NativeImpl_")
    project.ext.set("javaMathPrefix", "com_epam_deltix_dfpmath_NativeMathImpl_")
}

def rUser = findProperty('SONATYPE_NEXUS_USERNAME') ?: System.getenv('SONATYPE_NEXUS_USERNAME') ?: "FakeUser"
def rPass = findProperty('SONATYPE_NEXUS_PASSWORD') ?: System.getenv('SONATYPE_NEXUS_PASSWORD') ?: "FakePass"

tasks.register('uploadArtifactsToCentralPortal', com.epam.deltix.buildsrc.SonatypeCentralPortalUploadRepositoryTask) {
    portalUsername.set(rUser)
    portalPassword.set(rPass)
    groupId.set('com.epam.deltix')
    snapshotRelease.set(!version.endsWith("SNAPSHOT"))
}
