ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

apply plugin: 'java'
apply plugin: 'maven-publish'

if (isReleaseVersion) {
    apply plugin: 'signing'
}

group = 'com.epam.deltix'

sourceSets {
    java9 {
        java {
            srcDirs = ['src/main/java9']
        }
    }

    java18 {
        java {
            srcDirs = ['src/main/java18']
        }
    }
}

compileJava {
    sourceCompatibility = 8
    targetCompatibility = 8
}

compileJava9Java {
    sourceCompatibility = 9
    targetCompatibility = 9
}

compileJava18Java {
    sourceCompatibility = 18
    targetCompatibility = 18
}

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    java9Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }
    java18Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }

    testImplementation project(':java:testUtils')
    testImplementation 'junit:junit:4.+'
    testImplementation 'org.apache.commons:commons-math3:3.6.1'
//    testImplementation 'com.google.guava:guava:31.1-jre'
}

def rUser = findProperty('SONATYPE_NEXUS_USERNAME') ?: System.getenv('SONATYPE_NEXUS_USERNAME') ?: "FakeUser"
def rPass = findProperty('SONATYPE_NEXUS_PASSWORD') ?: System.getenv('SONATYPE_NEXUS_PASSWORD') ?: "FakePass"

publishing {
    repositories {
        maven {
            url = findProperty('SONATYPE_REPOSITORY') ?: System.getenv('SONATYPE_REPOSITORY') ?: "FakeRepo"

            credentials {
                username rUser
                password rPass
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'dfp'
                packaging = 'jar'
                description = 'Deltix Decimal Floating-Point Arithmetic Library.'
                url = 'https://github.com/epam/DFP'

                scm {
                    connection = 'scm:git:https://github.com/epam/DFP.git'
                    developerConnection = 'scm:git:https://github.com/epam/DFP.git'
                    url = 'https://github.com/epam/DFP.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'AndreiDavydov'
                        name = 'Andrei Davydov'
                        email = 'agdavydov81@gmail.com'
                        url = 'https://github.com/agdavydov81'
                        organization = 'EPAM Systems'
                        organizationUrl = 'https://www.epam.com/'
                    }
                }
            }
        }
    }
}

if (isReleaseVersion) {
    signing {
        def signingKey = findProperty('SIGNING_PRIVATE_KEY') ?: System.getenv('SIGNING_PRIVATE_KEY') ?: "FakeUser"
        def signingPassword = findProperty('SIGNING_PASSWORD') ?: System.getenv('SIGNING_PASSWORD') ?: "FakePass"

        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.mavenJava

        required { isReleaseVersion }
    }
}

jar {
    into('META-INF/versions/9') {
        from sourceSets.java9.output
    }
    into('META-INF/versions/18') {
        from sourceSets.java18.output
    }
    manifest {
        attributes 'Multi-Release': 'true',
            'Implementation-Title': 'Deltix Decimal Floating-Point Arithmetic Library',
            'Implementation-Version': archiveVersion,
            'Main-Class': 'com.epam.deltix.dfp.Demo'
    }
    from("$rootDir") {
        include 'LICENSE'
    }
    from("$rootDir") {
        include 'intel-eula.txt'
    }
}

